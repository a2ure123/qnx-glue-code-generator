{
  "function_name": "aio_write",
  "url": "https://www.qnx.com/developers/docs/7.1/com.qnx.doc.neutrino.lib_ref/topic/a/aio_write.html",
  "synopsis": "int aio_write64( struct aiocb64 * aiocbptr );",
  "description": "",
  "headers": [
    "#include <aio.h>"
  ],
  "parameters": [
    {
      "name": "aiocbptr",
      "description": "A pointer to an asynchronous I/O control block of type\n  aiocb or aiocb64\n  that defines how much data to write, and where to write it."
    }
  ],
  "return_values": [],
  "examples": [
    "#include <aio.h>\n\nint aio_write( struct aiocb * aiocbptr );\nint aio_write64( struct aiocb64 * aiocbptr );"
  ],
  "full_content": "Function: aio_write\nURL: https://www.qnx.com/developers/docs/7.1/com.qnx.doc.neutrino.lib_ref/topic/a/aio_write.html\nSynopsis: int aio_write64( struct aiocb64 * aiocbptr );\nHeaders: #include <aio.h>\nParameters:\n  - aiocbptr: A pointer to an asynchronous I/O control block of type\n  aiocb or aiocb64\n  that defines how much data to write, and where to write it.\nExamples:\nExample 1:\n#include <aio.h>\n\nint aio_write( struct aiocb * aiocbptr );\nint aio_write64( struct aiocb64 * aiocbptr );"
}